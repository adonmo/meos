# Build and publish wheels to PyPI
# Build runs on every push
# Publish runs only on a tag push
# Note: This does not publish sdist
name: Wheels

on: [push, pull_request]

jobs:
  build:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO fix builds for windows-latest and include
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: 3.8

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.4.2

    - name: Build wheels
      env:
        # Skipping:
        #   - Python 2.7 - MEOS doesn't support it
        #   - Linux (32-bit)
        #   - Windows (32-bit)
        #       Refer: https://cibuildwheel.readthedocs.io/en/stable/cpp_standards/#windows-and-python-27
        CIBW_SKIP: pp27* cp27* *win32 *i686
        CIBW_BEFORE_BUILD_LINUX: bash scripts/prepare_for_build.sh
        CIBW_BEFORE_BUILD_MACOS: brew install geos
        CIBW_ENVIRONMENT_WINDOWS: 'GEOS_LIBRARY_PATH="C:/Program Files (x86)/GEOS/bin/geos_c.dll" GEOS_INCLUDE_PATH="C:/Program Files (x86)/GEOS/include"'
        CIBW_BEFORE_BUILD_WINDOWS: bash scripts/prepare_for_build.sh
        CIBW_BEFORE_TEST: pip install -r test/python/requirements.txt
        CIBW_TEST_COMMAND: pytest {project}/test/python
      run: |
        python -m cibuildwheel --output-dir dist

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
